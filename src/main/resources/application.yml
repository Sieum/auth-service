server:
  port: 8080

  #spring:
  #  config:
  #    import: optional:file:.env[.properties]
  #  datasource:
  #    driver-class-name: com.mysql.cj.jdbc.Driver
  #    url: ${DB_URL}
  #    username: ${DB_ID}
  #    password: ${DB_PWD}
  #    hikari:
  #      maximum-pool-size: 10
  #      minimum-idle: 10
  #      connection-timeout: 10000
  #      connection-init-sql: SELECT 1
  #      idle-timeout: 600000
  #      max-lifetime: 1800000
  #      auto-commit: true

  servlet:
    multipart:
      max-file-size: 25MB

  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 1000

    #oauth 설정
    security:
      oauth2:
        client:
          registration:
            spotify:
              client-id: ${SPOTIFY_KEY}
              client-secret: ${SPOTIFY_SECRET}
              scope: user-read-email,user-read-private

          provider:
            spotify:
              authorization-uri: https://accounts.spotify.com/authorize
              token-uri: https://accounts.spotify.com/api/token
              user-info-uri: https://api.spotify.com/v1/me
              user-name-attribute: id

  #Swaager 사용에 필요
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

logging:
  level:
    root: info

jwt:
  secretKey: ${JWT_PWD}

  access:
    expiration: 3600000 # ms -> 1시간
    header: Authorization

  refresh:
    expiration: 1209600000 #  ms -> 2주
    header: Authorization-refresh

  redirect:
    ${REACT_NATIVE_REDIRECT}
